// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using cryptinopAPI.DAL.Context;

namespace cryptinopAPI.Migrations
{
    [DbContext(typeof(CryptinopContext))]
    [Migration("20200516185953_Initial_Database")]
    partial class Initial_Database
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("cryptinopAPI.Models.CategorieActivite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("cryptinopAPI.Models.Monnaie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Nom")
                        .HasColumnType("text");

                    b.Property<int?>("TypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Monnaies");
                });

            modelBuilder.Entity("cryptinopAPI.Models.TypeCategorie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("CategorieId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CategorieId");

                    b.ToTable("Types");
                });

            modelBuilder.Entity("cryptinopAPI.Models.ValMonnaie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal>("CapMarche")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("DateDernMAJ")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("MonnaieId")
                        .HasColumnType("integer");

                    b.Property<int>("Rang")
                        .HasColumnType("integer");

                    b.Property<decimal>("Valeur")
                        .HasColumnType("numeric");

                    b.Property<double>("Variation1H")
                        .HasColumnType("double precision");

                    b.Property<double>("Variation24H")
                        .HasColumnType("double precision");

                    b.Property<double>("Variation7Jrs")
                        .HasColumnType("double precision");

                    b.Property<decimal>("Volume24H")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("MonnaieId");

                    b.ToTable("ValMonnaies");
                });

            modelBuilder.Entity("cryptinopAPI.Models.Monnaie", b =>
                {
                    b.HasOne("cryptinopAPI.Models.TypeCategorie", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");
                });

            modelBuilder.Entity("cryptinopAPI.Models.TypeCategorie", b =>
                {
                    b.HasOne("cryptinopAPI.Models.CategorieActivite", "Categorie")
                        .WithMany()
                        .HasForeignKey("CategorieId");
                });

            modelBuilder.Entity("cryptinopAPI.Models.ValMonnaie", b =>
                {
                    b.HasOne("cryptinopAPI.Models.Monnaie", "Monnaie")
                        .WithMany()
                        .HasForeignKey("MonnaieId");
                });
#pragma warning restore 612, 618
        }
    }
}
